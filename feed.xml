<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://nveloper.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://nveloper.github.io/" rel="alternate" type="text/html" /><updated>2025-09-20T06:29:31+00:00</updated><id>https://nveloper.github.io/feed.xml</id><title type="html">Nveloper’s Note</title><subtitle>Nveloper&apos;s Note, A blog with my story.</subtitle><entry><title type="html">이젠 데탑도 서버에 넣어요.</title><link href="https://nveloper.github.io/server/2025/08/27/VE5110-PVE2HA.html" rel="alternate" type="text/html" title="이젠 데탑도 서버에 넣어요." /><published>2025-08-27T00:00:00+00:00</published><updated>2025-08-27T00:00:00+00:00</updated><id>https://nveloper.github.io/server/2025/08/27/VE5110-PVE2HA</id><content type="html" xml:base="https://nveloper.github.io/server/2025/08/27/VE5110-PVE2HA.html"><![CDATA[<h2 id="서론">서론</h2>
<p>제목에서 말한 ‘데탑을 서버에 넣는다.’ 라는 문장은 사실<br />
Proxmox에 익숙한 사람이라면 아주 당연하게 받아들여질 문장이다.<br />
BIOS 설정에서 IOMMU 설정을 활성화한 다음에<br />
GPU Passthrough를 진행한 다음, 윈도우 VM에 할당하면 된다.<br /> 
이렇게 구성한 경우 GPU 단자에 디스플레이 케이블을 연결하기만 하면<br />
우리가 통상적으로 쓰는 데스크탑 마냥 사용할 수 있다.<br />
하지만 여기서 다룰 내용은 해당 내용이 아니니 <a href="https://nveloper.note/server/2023/08/10/FE5020-GPUpsth.html">다른 포스트</a>로 이동하길 바란다.<br /></p>

<p>나는 항상 서버라 하면 헤드리스로 구성하는 것을 지향한다.<br />
헤드리스는 간단하게 말하면 본체에 키보드, 모니터, 마우스<br />
(약칭으로 KVM이라 불리는 것들. 커널 기반 가상머신을 연상했다면 나랑 결혼하자.) <br />
없이 오직 랜선과 전원선만 꽂혀있는 구성이다.<br />
리눅스에 익숙한 사람들은 이런 구성이 얼마나 깔쌈한지 알고 있을 것이다.<br />
보통 그런 사람은 SSH로 주로 접근하고, 요즘엔 RDP를 이용해서 원격접속을 가능케해주는 xrdp 기능을 쓰기도 한다.<br />
나 역시 VGA가 지원될 환경이라면 Sunshine, Moonlight 조합으로 원격 접속을 하고,<br />
그런 환경이 아니라면 SSH, VNC, RDP 등을 활용한다.<br /></p>

<p>각설하고, 이런 식으로 자원을 효율적으로 쓰고(오버헤드,가 약간은 발생하지만) 미니멀한 구성을 꿈꾼다면<br />
한번쯤은 데스크탑 자체를 PVE 노드로 만들고 싶다는 상상을 해볼 것이다.<br />
보통은 안정성이라는 명목으로, 또 실용성이 떨어진다는 이유로 구성을 관둘 것이다.<br />
네이티브로 OS가 돌아가는 것이 VM보다 성능 상 낫다는 것은 부정할 수 없는 사실이고,<br />
VM으로 구성된 Windows OS의 전원을 켜려면 항상 PVE의 WebUI에서 조작을 해야 하기 때문에<br />
PVE에서 데스크탑의 용도로 VM을 돌린다는 발상이 여간 성가신 일이 아니다.<br />
하지만 PVE의 WebUI에서 조작을 해야한다는 성가심을 어느 정도 완화할 수 있는 방법이 존재하기는 한다!<br /></p>

<h2 id="proxmox-ve-addon">Proxmox VE Addon</h2>
<p>Home Assistant는 아주 많은 애드온을 지원한다.<br />
그 중 <a href="https://www.home-assistant.io/integrations/proxmoxve/">ProxmoxVE Addon</a>은 PVE 노드의 각종 정보를 Home Assistant에 불러오는 역할을 한다.<br />
불러와지는 정보는 노드의 대시보드와, 각 VM 또는 LXC의 대시보드, 그리고 저장장치의 상태 등이다.<br />
이걸로 우리는 PVE의 개략적인 상태를 관제할 수 있고, 각각의 VM, LXC에 대해 명령을 내릴 수 있다.<br />
이 명령들은 기본적으로는 비활성화되어 있으며, 활성화 후 reboot, start, shutdown 등을 사용할 수 있다.<br />
물론 이 명령들이 수행되기 위해서는 PVE의 WebUI에서도 수행되는 상태여야 하며, <br />
VM 측에 Qemu Guest Tool이 설치되어 있어야 한다.<br />
여기서 Qemu Guest Tool을 설치하는 방법은 생략하겠다.<br /></p>

<p>즉, 해당 명령들은 Home Assistant 측에서 Entity로 인식되며,<br />
우리는 이를 토대로 해당 Entity들을 자동화에 활용할 수 있다.<br />
Zigbee 프로토콜을 이용하는 리모컨 같은 것들을 이에 묶는다면,<br />
보다 더 직관적인 형태로 VM을 켜고 끄는 것이 가능해진다.<br />
우리가 데스크탑에서 하던 그대로의 느낌으로 말이다.<br />
폰이 더 친숙하고, 폰으로 모든 것을 하고 싶은 사람이라면<br />
Home Assistant 앱에서 해당 스위치에 접근하여 직접 켜고 끄는 방법이 있을 수도 있다.<br />
더 나아가 삼성 DeX 같은 것들이 가능한 갤럭시 기기라면,<br />
프로그래밍된 NFC 태그와 독 연결 인식으로 스위치를 트리거하고<br />
문라이트 같은 원격 앱으로 리다이렉트 하도록 구성할 수 있다. <br /></p>

<h2 id="적용하기">적용하기</h2>
<p>일단 ProxmoxVE 애드온을 구성하는 방법은 다음과 같다.<br /></p>
<ol>
  <li>configuration.yaml로 엔티티 구성</li>
  <li>HACS를 통하여 Proxmox VE 애드온 설치<br /></li>
</ol>

<p>Home Assistant를 구성한 사람들이라면 HACS를 어느 정도 활용해 보았을 것이니 편의상 후자를 추천하지만,<br /> 
경우에 따라 HACS를 활용하지 못하는 경우도 있을 수 있으므로 취사 선택해서 활용하기를 바란다.<br /></p>

<h3 id="1-configurationyaml로-엔티티-구성">1. configuration.yaml로 엔티티 구성<br /></h3>

<p>먼저 Home Assistant에 File Editor 애드온을 설치하여 접근하거나, SSH로 접근하거나 하여<br />
configuration.yaml을 열어야 한다.<br /></p>

<p>해당 파일을 열어서 아래의 내용을 붙여넣기 해준다. 한국어 부분은 설명대로 작성하여야 한다.<br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Home Assistant에서 configuration.yaml에 해당 내용 첨부
proxmoxve:
  - host: PVE의 IP 주소
    username: PVE에서의 아이디
    password: PVE에서의 비밀번호
    nodes:
      - node: 노드 이름
        vms:
          - VM의 ID
          - LXC의 ID
</code></pre></div></div>
<p>이렇게 하면 구성 내용에 오류가 있지 않는 한 정상적으로 애드온이 구성되고 관련 엔티티가 생겨야 한다.<br />
생기지 않았거나 노드가 제대로 적용되지 않았다면 Home Assistant 측의 로그를 확인하고 그에 맞는 조치를 취하여야 한다.<br /></p>

<h3 id="2-hacs를-통하여-proxmox-ve-애드온-설치">2. HACS를 통하여 Proxmox VE 애드온 설치<br /></h3>

<p>HACS를 통해 Proxmox VE를 설치하기 위해서는 Proxmox VE의 <a href="https://github.com/dougiteixeira/proxmoxve">Custom Integration</a>을 참고해야 한다.<br /></p>

<p>애드온 <a href="https://my.home-assistant.io/redirect/hacs_repository/?owner=dougiteixeira&amp;repository=proxmoxve&amp;category=integration">설치 링크</a>를 누르면 위 링크에서 제공하는 바로가기 링크로 가게 된다.</p>
<p align="center">
 <img src="/assets/images/FE5110-1.png" />
</p>
<p>본인의 Home Assistant 접속 주소를 Your Instance URL 항목에 적으면<br /> 
Home Assistant에 설치할 수 있도록 리다이렉트 될 것이다.<br /></p>

<p>만일 이 링크가 작동하지 않는다면 HACS custom repository에<br />
<code class="language-plaintext highlighter-rouge">https://github.com/dougiteixeira/proxmoxve</code>를 추가해줘야 한다.<br /></p>
<p align="center">
 <img src="/assets/images/FE5110-2.png" />
</p>
<p>위 사진처럼 HACS 탭에서 우측 3점 버튼을 누른 후, Custom Repositories를 누른다.<br />
그 곳에서 위 링크를 붙여넣고, Type은 Integration으로 지정한다.<br /></p>
<p align="center">
 <img src="/assets/images/FE5110-3.png" />
</p>
<p>그럼 위와 같이 Repository가 등록될 것이고,<br />
이를 통해 Proxmox VE 서버와 노드를 등록할 수 있다.<br /></p>

<p>이 방법을 통해 설치한 경우, 아래와 같은 화면이 나온다.<br /></p>
<p align="center">
 <img src="/assets/images/FE5110-4.png" />
</p>
<p><code class="language-plaintext highlighter-rouge">Host*</code> 부분에는 PVE의 IP 주소를 적어주면 되고,<br />
<code class="language-plaintext highlighter-rouge">Port</code> 는 PVE의 포트를 바꾸지 않은 이상 기본값 그대로 8006을 적어주면 된다.<br />
혹시 이 부분을 Nginx Proxy Manager로 대체한 URL로 채우면 오류가 뜰 것이다.<br />
아무래도 인증서 관련 문제인 듯 한데, 일단은 IP:포트 구성을 NPM 존재 여부와 상관없이<rb>
활용해야 할 듯 하다. 추후 해당 부분에 대해 알아내는 것이 있으면 추가 작성하겠다.<br />
<code class="language-plaintext highlighter-rouge">Username</code>은 PVE에서의 아이디를 입력하면 되고<br />
<code class="language-plaintext highlighter-rouge">Token name</code>은 PVE에서 발행한 토큰이 있다면 그 이름을 적어주면 된다.<br />
<code class="language-plaintext highlighter-rouge">Password</code>는 PVE에서의 비밀번호를 입력하면 되는데,<br />
<code class="language-plaintext highlighter-rouge">Token name</code>을 채웠다면 <code class="language-plaintext highlighter-rouge">Token value</code> 값을 채워줘도 무방하다.<br /> 
경험상 Token을 활용한 연결은 노드 값이 제대로 불러와지지 않는 등의 버그가 있었어서<br />
원래대로 <code class="language-plaintext highlighter-rouge">Username</code>과 <code class="language-plaintext highlighter-rouge">Password</code>를 입력하고 추가하는 것을 추천한다.<br /></rb></p>

<p>Submit를 누르면 노드와 VM, LXC 등 각종 Entity 들의 위치를 정하는 화면이 나오며<br />
Entity의 위치, 용도에 따라 자유롭게 정하면 되겠다.<br /></p>

<h2 id="설치-후-finishing-touch">설치 후 Finishing Touch</h2>
<p>이제 추가적으로 해줘야 할 것은 노드, VM, LXC에 대한<br /> 
제어 명령들을 보내는 Entity를 구성하는 것이다.<br /></p>
<p align="center">
 <img src="/assets/images/FE5110-5.png" />
</p>
<p>위 이미지는 VM에서 찍은 스크린샷이나, 노드, VM, LXC 모두<br /> 
같은 방법으로 Entity를 구성할 수 있다.<br /></p>

<p>여기서 Disabled Entities를 눌러 항목들을 보면,<br />
Start, Stop, Hibernate, Reboot, … 등의 비활성화된 버튼들이 보일 것이다.<br />
예시로 Reboot 버튼을 살려보도록 하겠다.<br /></p>
<p align="center">
 <img src="/assets/images/FE5110-6.png" />
</p>
<p>여기서 황색 Enable 버튼을 누르면 30초 이내로 활성화될 거라는 안내가 뜨고<br />
30초 이내로 해당 버튼이 Entity로 추가된다.<br />
다른 버튼들도 같은 방법으로 활성화하면<br /> 
VM을 Home Assistant에서 켜고 끌 수 있게 된다.<br /></p>

<h2 id="활용하기">활용하기</h2>
<p>이 자체만으로도 충분히 유용하게 활용 가능한 구성이 완성되었다.<br />
Home Assistant는 앱으로도 접근이 가능하고, 해당 앱 자체로도<br />
빅스비 루틴이나 Shortcut과 연동하여 활용할 수 있기 때문이다.<br /></p>

<p>그러나 여기서 좀 더 유용하게 활용하는 방법을 생각해보기로 했다.<br /></p>

<h3 id="출퇴근-트리거와-연동">출퇴근(?) 트리거와 연동</h3>

<h3 id="지그비-리모컨과-연동">지그비 리모컨과 연동</h3>

<p>###</p>]]></content><author><name>Steven</name></author><category term="Server" /><category term="Server" /><category term="Proxmox" /><category term="Network" /><category term="SFF" /><summary type="html"><![CDATA[서론 제목에서 말한 ‘데탑을 서버에 넣는다.’ 라는 문장은 사실 Proxmox에 익숙한 사람이라면 아주 당연하게 받아들여질 문장이다. BIOS 설정에서 IOMMU 설정을 활성화한 다음에 GPU Passthrough를 진행한 다음, 윈도우 VM에 할당하면 된다. 이렇게 구성한 경우 GPU 단자에 디스플레이 케이블을 연결하기만 하면 우리가 통상적으로 쓰는 데스크탑 마냥 사용할 수 있다. 하지만 여기서 다룰 내용은 해당 내용이 아니니 다른 포스트로 이동하길 바란다.]]></summary></entry><entry><title type="html">무중단 운영 서버의 꿈, HomeLab을 벗어난 사치. (1)</title><link href="https://nveloper.github.io/server/2025/08/05/VE5150-Ceph-1.html" rel="alternate" type="text/html" title="무중단 운영 서버의 꿈, HomeLab을 벗어난 사치. (1)" /><published>2025-08-05T00:00:00+00:00</published><updated>2025-08-05T00:00:00+00:00</updated><id>https://nveloper.github.io/server/2025/08/05/VE5150-Ceph-1</id><content type="html" xml:base="https://nveloper.github.io/server/2025/08/05/VE5150-Ceph-1.html"><![CDATA[<p>처음 서버라고 불릴만한 기기들을 도입할 적에는<br />
사양이 다르고 그 목적성이 조금씩 달라 파편화되고 다양했었으나,<br />
2023년 7월 내/외부망을 전부 1GbE로 통일하게 되면서<br />
1개 서버로 한정된 자원을 효율적으로 활용하여 다양한 기능을 할 수 있게 하자는 발상을 하게 되었다.<br />
그리하여 Proxmox VE라는 하이퍼바이저 OS를 도입하게 되었고, <br /> 
그렇게 Ryzen 5600G, 32GB 램의 사양을 가진 Deskmini X300에서<br /> 
Proxmox VE를 구동하게 되었다.<br /></p>

<p>하지만 당시 무중단 운영보단 중앙집중적 구성에만 집중했던 사정으로 인해<br />
서버 자체가 1개, 다시 말해 단일 노드라는 한계를 가지고 있었다.<br />
당연히 충분, 아니 차고 넘치는 사양이지만<br /> 
결벽증으로 인해 방에 씻기 전엔 못 들어가는 버릇이 있는 고로(…)<br />
장애 발생 시 대처가 하루를 넘기게 되는 불상사가 간혹 발생하게 되었다. <br /></p>

<p>장애의 원인은 다양하다.<br />
현재까지 발생한 이력이 있는 장애 원인은<br /></p>
<ol>
  <li>정전</li>
  <li>서비스 구성 실수로 네트워크 구성 오류</li>
  <li>서버 이름 변경(…)</li>
  <li>공유기 불량</li>
  <li>공유기 설정 중 DHCP 미할당</li>
  <li>디스크 불량</li>
  <li>OOM Killer<br /></li>
</ol>

<p>물론 정전조차 흔히 일어나는 일은 아니다.<br />
그럼에도 장애란 것은 일어나면 큰 일이기 때문에(컴퓨터공학부 학생이 컴퓨터를 못하게 된다고 생각해보라!)<br />
이러한 장애가 발생하는 것을 줄이기 위한 시도는 끊임없이 이어져 왔다.<br /></p>

<p>가장 크리티컬한 장애 원인인 정전은<br />
부실한 전력원이 아니라 동거자의 부주의로 발생한다.<br />
용량이 안되는 멀티탭에 전열기기 등의 고출력 기기를 연결하거나<br />
싸구려 멀티탭을 쇼트내면(…) 발생하는 일이기 때문에<br />
장기적인 장애로 이어지지 않으며, 두꺼비집을 점검하는 순간 원상복구가 된다.<br />
따라서 이 부분은 무정전 전원장치(UPS)로 보완하기로 하였다.<br /></p>

<p>그 다음에 발생하는 장애 중 2, 3, 4, 5, 7 같은 경우,<br />
메인프레임인 Proxmox VE가 다운된 것은 아니지만,<br />
소프트웨어 상의 이유로 원격 접근이 불가능한 경우이다. <br />
즉, 메인프레임에 접근할 수만 있다면 복구가 가능한 장애이다.<br />
그러나 헤드리스 구성으로 창고에 처박은 서버에 손쉽게 접근하는 것은<br />
쉬운 일도 아니거니와, 그리 내키는 일도 아니다.<br />
다행히 KVM over IP를 지원하는 KVM들이 저렴하게 풀리기 시작하여(Nano KVM, Pi KVM)<br />
원격으로 바이오스까지 점검할 수 있는 기틀이 마련되었다.<br />
공유기가 정상작동하고, KVM이 죽지 않아야 한다는 전제가 필요하지만,<br />
중앙집중식 구성에서 단일 장애 지점(SPOF)을 저렴하게 해소할 수 있다는 점에서<br />
꽤나 매력적인 보험이라고 생각한다.<br /></p>

<p>그러나 6번과 같은 상황은 꽤나 심각하며, 즉각적인 조치가 어렵다.<br />
하드웨어 상에서 문제가 발생한 것이기 때문에 노드 자체가 죽었을 가능성이 크며,<br />
Proxmox VE는 디스크 쓰기가 주로 일어나는 NAS 뿐만아니라 읽기/쓰기가 빈번하게 일어나는<br />
상용 OS까지 VM으로 구동하고 있기 때문에 디스크 정보 자체의 손상을 수반하며,<br />
이를 복구하는 것은 SSD라면 불가능에 가깝고, HDD여도 어렵다.<br />
물론 Proxmox VE는 클러스터 구성이 되어 있다면 타 노드로 VM을 마이그레이션하는 것을 지원하고,<br />
Proxmox Backup Server를 별도 구성하여 VM을 주기적으로 백업하게 만들 수도 있다.<br /></p>

<p>아무튼 백업이라는 것은 자동화가 가능하며, 마이그레이션도 원격으로 수행할 수 있으니<br />
이 정도면 홈랩 규모에서는 최대한의 보험을 구축했다고 볼 수 있다.<br />
그러나 이 또한 비정규적인 조치가 필요하며, 당장 활용해야 하는 서버를 고쳐야 한다.<br />
서버를 활용한다기보다 서버를 모시고 살게 되는 주객전도가 발생하게 되는 것이다.<br /></p>

<p>자, 이렇게 디스크가 문제가 생기는 것에 대처하기 위해 무엇을 해야 하는가에 대한 고민이 시작되었다.<br /></p>

<p>NAS와 같은 장비에서 활용되는 RAID 구성은 어떻게 구성하느냐에 따라 대역폭을 늘릴수도, 데이터 안정성을 늘릴 수 있다.<br />
그래서 연식이 오래된 중고 HDD를 여러 개 사서 나스를 구성하는 경우가 많다.<br />
그런데 이 경우 어떤 디스크에 문제가 생기면 반드시 관리자의 개입이 발생할 수 밖에 없다.<br />
어떤 RAID 구성을 따르더라도 구성에 사용된 디스크에 문제가 발생하면 정도에 차이가 있긴 하지만 운영에 지장이 갈 수 밖에 없다.<br />
RAID 0의 경우 안정성을 손해보고 대역폭을 늘린 무식한 구성이라 문제가 생기면 얄짤없이 모든 데이터가 손실된다.<br />
RAID 1, 5, 6, 10의 경우 당장은 장애가 발생하지 않지만 시스템 성능이 저하된 채로 구동되어 성능을 요구하는 VM의 운영에 지장을 초래하며,<br />
복구 이전에 또 다른 디스크에 문제가 생긴다면 이 역시 데이터 손실이 발생한다.<br />
복구 과정 역시 번거롭다.<br />
핫스왑을 지원하는 장비라면 운영 중 디스크를 교체할 수 있지만, <br />
이 경우에도 관리자가 문제의 디스크를 직접 식별해야한다는 번거로움이 남는다.<br />
핫스왑을 지원하지 않는다면 상황은 더 번거로워진다.<br />
직접 시스템을 끄고 정비한 다음에 서비스를 활성화해야 하며,<br />
정상적인 운영을 위해서 데이터 리빌드 과정을 거치게 된다.<br />
이는 남은 디스크의 데이터와 패리티 정보를 이용하는 것이라 손실이 클수록 복원이 어려워지며<br />
대체로 서버급 하드를 쓰지 않는 가정집의 사정 상, 관리자가 수동으로 리빌드를 진행해야 한다는<br />
보험 사기에 가까운 수준의 상황이 벌어진다.<br /></p>

<p>너무나 단점이 많은 RAID 구성에 엿을 날리고 보면 신기한 선택지가 나온다.<br />
ZFS라는 파일 시스템과 볼륨 관리자를 통합한 기술이며, RAID에 비해 강력한 기능과 안정성을 제공한다.<br />
ZFS는 데이터를 덮어쓰지 않고 항상 비어있는 공간에 기록한다.<br />
그래서 전원 손실이나 시스템 오류로 인해 데이터가 손상되는 일을 방지한다. 모든 것이 기록되어 있으므로.<br />
또한 모든 데이터 블록에 대해 체크섬을 부여하는데, 이를 통해 데이터 손상 여부를 RAID보다 민감하게 감지한다.<br />
이러한 손실이 감지되면 RAID-Z나 복제본을 통해 해당 디스크의 데이터를 자동으로 복구하기도 한다.<br />
즉 ZFS pool에 묶인 별도의 디스크가 존재한다면, VM과 같은 서비스는 그 디스크의 복제본 데이터로 정상 구동되며<br />
고장난 디스크를 전원을 끄지 않은 채로 교체하기만 하면 자동적으로 복원이 이루어진다!<br />
여러 개의 디스크를 수용할 수 있는 단일 노드라면 이만한 보험이 없다고 생각된다.<br /></p>

<p>실제로 포스팅을 쓰는 기준(2025년 8월 5일) 운영하고 있는 서버는 ZFS pool을 만들고 모든 VM을 ZFS위에 올려 안정성을 꾀하고 있다.<br />
그런데 ZFS조차 무중단 운영의 정답이 될 수 없다. 왜일까?<br /></p>

<p>ZFS가 무중단 운영에서 고려될 수 없는 이유는 크게 2가지가 있다. <br /></p>

<ol>
  <li>데이터 복제 주기 문제</li>
  <li>디스크 제거 및 변경의 난점</li>
</ol>

<p>아니, 뛰어난 파일 시스템이라면서 데이터 복제 주기에서 문제가 발생한다는 것은 뭘까?<br />
사실 데이터 복제 주기 문제는 단일 서버에서 구성된 경우 크게 신경 쓸 만한 사항이 아니다.<br />
클러스터링을 염두에 둔 다중 서버에서 ZFS를 활용하는 경우 문제가 될 수 있는 것인데,<br />
이유는 근본적으로 인위적이든 자동이든 복제를 통해 다른 노드에 데이터를 동기화해야 한다.<br />
문제는 각 노드마다 복제 주기가 맞지 않는 경우가 발생하는 것에 있으며, <br />
복제 자체가 네트워크 구성에 영향받기도 한다.<br />
또한 이런 보험을 마련하는 목적성 자체는 데이터 안정성보다 무중단 운영에 있는데,<br />
고가용성의 확보를 위해 클러스터링을 하는 경우 이 단점이 치명적이게 된다.<br />
ZFS에서 고가용성을 구현하는 방법(HA Cluster, ZFS Replication)이 존재하기는 하나,<br />
하나 같이 실시간 동기화가 아니라 특정 시간대에서의 복제를 기반으로 구현되어<br />
장애 발생 시 파일 시스템에 손상이 가기 쉬워지거나 장애 발생 시점보다 더 이전의 스냅샷으로 복원이 된다.<br />
RAID 구성보단 확실히 다운타임을 줄이는 방법이지만, 클러스터를 구성할 입장에서는 그리 매력적인 선지가 못 된다.<br /></p>

<p>그러던 와중에 <a href="https://blog.oriang.net/76">Proxmox VE 클러스터에서 Ceph를 구현한 글</a>을 보게 되었다.<br />
이 글에서 등장하는 Ceph는 오픈소스 분산 스토리지 시스템으로, 여러 대의 서버와 디스크를 하나로 묶어 거대한 단일 스토리지 장비처럼 사용할 수 있게 해주는 기능이다.<br />
그럼 기존의 단일 스토리지 장비(단일 노드 Proxmox VE, NAS)와의 차이는 무엇일까?</p>

<p>우선 Ceph는 데이터를 한 곳에 저장하지 않고, 클러스터를 구성하는 노드들의 디스크에 분산하여 저장한다.<br />
또한 데이터에 파일이나 블록 단위로 저장하지 않고, 고유한 ID를 가지는 객체(Object)로 변환하여 저장한다.<br />
이렇게 저장되는 데이터는 노드마다 저장될 복제본이며, 각 클러스터마다 같은 방식으로 복제되어 저장된다.<br />
그렇기 때문에 어떤 노드에 장애가 생길 때, 장애가 일어나지 않은 정상 노드에서 VM의 구동을 보장하며,<br />
장애 노드가 정상화될 때 타 노드에서 데이터를 복제하여 VM을 복원한다.<br /> 
이것이 Ceph가 지향하는 고가용성(HA)의 구현 방식이다.<br />
즉, 이와 같은 구성에서는 노드 전체가 장애가 발생하지 않는 한 VM의 무중단 운영을 위해서 관리자가 물리적으로 개입하지 않아도 된다.<br /> 
여러 노드를 구성하는 것에서 멈추지 않고, 특정 노드에 장애가 생기더라도 VM이 지장없이 실행되게 할 수 있다는 나에게 있어서는 꿈의 개념인 셈이다.<br /></p>

<p>이 Ceph라는 기능을 구현하기 위해서 어떤 것을 할지에 대해서는 다음 포스트에 적어보도록 하겠다.<br /></p>]]></content><author><name>Steven</name></author><category term="Server" /><category term="Server" /><category term="Proxmox" /><category term="Network" /><category term="SFF" /><summary type="html"><![CDATA[처음 서버라고 불릴만한 기기들을 도입할 적에는 사양이 다르고 그 목적성이 조금씩 달라 파편화되고 다양했었으나, 2023년 7월 내/외부망을 전부 1GbE로 통일하게 되면서 1개 서버로 한정된 자원을 효율적으로 활용하여 다양한 기능을 할 수 있게 하자는 발상을 하게 되었다. 그리하여 Proxmox VE라는 하이퍼바이저 OS를 도입하게 되었고, 그렇게 Ryzen 5600G, 32GB 램의 사양을 가진 Deskmini X300에서 Proxmox VE를 구동하게 되었다.]]></summary></entry><entry><title type="html">재실센서, 그런데 ESP32인. (1)</title><link href="https://nveloper.github.io/server/2025/06/08/VE5120-mmWave-1.html" rel="alternate" type="text/html" title="재실센서, 그런데 ESP32인. (1)" /><published>2025-06-08T00:00:00+00:00</published><updated>2025-06-08T00:00:00+00:00</updated><id>https://nveloper.github.io/server/2025/06/08/VE5120-mmWave-1</id><content type="html" xml:base="https://nveloper.github.io/server/2025/06/08/VE5120-mmWave-1.html"><![CDATA[<h2 id="구입-계기">구입 계기</h2>
<p>지난 2024년 4월 Home Assistant 서버에 물린 Zigbee 노드가 30개가 넘어감에 따라<br />
기존에 쓰던 CC2531 Zigbee 동글을 지원 종료하고 Home Assistant가 공식 지원한다고 하는 <a href="https://www.home-assistant.io/connectzbt1/">Home Assistant Skyconnect</a>(현재는 Home Assistant Connect ZBT-1이라는 이름으로 팔리나 보다.)로 새로 구성하였다.<br /></p>

<p>구성에 관한 내용은 별도 서술했으니 해당 포스트 참조.<br /></p>

<p>그때 해당 동글을 사는 <a href="https://www.seeedstudio.com/">사이트</a>에서 mmWave 재실 센서를 같이 팔았는데, <br />
상시 전원에 Zigbee가 아닌 WiFi로 연결되는 재실센서라서 구매해보았다.<br />
원래는 WiFi 연결을 사용하는 장비는 공유기에 크든 작든 부하를 주기 때문에 별로 선호하지 않는다.<br />
그래서 보통은 Zigbee 연결로 매개되는 장비를 사용하고, 이를 통해 공유기의 범위가 닿지 않는 곳에서도 조명이나 스위치를 사용할 수 있도록 구성한다.<br /> 
하지만 지금 이 센서는 다른 저렴이 센서에 비해 단정(?)해 보이고 성능도 좋아보이는 만큼 내 방에다 고이 모셔두어 활용할 생각으로 구매했다.<br /></p>

<h2 id="방치">방치</h2>
<p>그러나 해당 센서는 1년이 지나도록 활성화하지 못했다. <br />
일단 내 방에서는 재실 센서의 필요성이 매우 떨어진다. <br /></p>

<ol>
  <li>내 방은 모종의 이유로 아무나 들어올 수 없는 방인데다가, <br /></li>
  <li>내가 집에 있지 않으면 방문 자체가 열리지 않으므로, 내가 집에 없을 때 내 방에 대해 관제할 이유가 없고,<br /></li>
  <li>무엇보다 조명이나 Thermostat과 관련된 장비는 재실 여부보다는 온도나 시간을 기준으로 자동화를 짜는 것이 더 이상적이기 때문이다.<br /></li>
</ol>

<p>필요성이 떨어지니 우선순위에서 점점 멀어지고, 그러다가 까먹게 되니 
센서가 전원에 물린 상태로 활성화가 되지 못한 사실도 망각한 채로 시간을 보내버렸다.<br /></p>

<p>최근 Home Assistant의 Automation 영역과 불용처리된 Entity들을 정리하다가 
연결되었지만 안 쓰는 센서가 있다는 걸 알아차렸고, 그제서야 이 센서를 활성화할 궁리를 하기 시작했다.<br /></p>

<h2 id="고난의-시작">고난의 시작</h2>
<p>우선 이 센서의 이름은 <a href="https://wiki.seeedstudio.com/mmwave_human_detection_kit/">mmWave Human Detection Kit</a>이다.<br />
Seeed Studio의 XIAO ESP32-C3를 기반으로 만들어졌다.<br /> WiFi, Bluetooth LE로 연결되며, mmWave로 정밀한 움직임 정보를 읽어낸다.<br /></p>

<p>사이트에 매뉴얼이 있어 이를 따라 활성화해 보았다.<br /></p>

<p>제일 먼저 기기에 전원을 인가하면 기기의 AP가 브로드캐스팅된다.<br />
이 AP에 연결한 다음, 브라우저에서 192.168.4.1을 쳐 센서의 웹UI에 접속하여 센서가 연결할 WiFi 정보를 입력하는 것이다.<br />
이 센서가 지원하는 WiFi 대역은 2.4GHz 이므로 주의해서 설정하도록 한다.<br /></p>

<p>하라는 대로 했다면 Home Assistant에서 이 센서를 자동으로 발견할 것이다.<br /></p>

<p>SeeedStudio mmWave Kit XXXXXX 의 이름으로 발견되며, 이를 구성하면 ESPHome의 장비로 잡힌다.<br /></p>

<p>사이트 매뉴얼에서는 이 센서의 Entity를 Dashboard에 추가하면 Kit가 작동하는 걸 볼 수 있다고 했지만, 이 대목에서 문제가 생겼다.<br /> 센서의 모든 값이 Unknown으로 반환되는 것이었다.<br /></p>

<h2 id="문제찾기">문제찾기</h2>
<p>사실 Home Assistant에서는 ESPHome의 장비로 잡히긴 했는데, ESPHome에서 이 장비를 인식하지 못해서 생기는 문제라는 글을 읽고 바로잡아보기로 했다. <br />
그런데 이상하게도 ESPHome Addon이 보이지 않고 ESPHome Builder만 보이는 것이다.<br />
알고 보니 관심을 껐던 1년 동안 ESPHome이 ESPHome Builder와 병합(24년 5월 경)되었다고 한다. <br />
그래서 ESPHome의 WebUI는 앞으로 ESPHome Builder의 WebUI에서 접근할 수 있게 됐다. <br />
관련해서 Gemini나 ChatGPT에게 물어보는 사람들은 이 점을 주지시켜주면 올바른 설명을 제공할 것이니 참고하면 좋을 듯 하다.<br /></p>

<p>그렇게 아무것도 안 잡혀있던 WebUI 상에서 잡히긴 했지만 여전히 문제는 해결되지 않았다.<br /></p>

<p>이리저리 찾아보아도 이 센서를 쓰는 사람이 많이 없는 문제도 있고, <br />
이 센서를 활용할 줄 아는 사람이면 설명을 매우 불친절하게 적는 관계로(…) 이 대목에서 다시 Gemini의 도움을 받기로 했다.<br /></p>

<p>Gemini는 기존 센서의 YAML에 적힌 내용에 센서의 Entity를 명시하지 않아 이런 문제가 생길 수 있다고 싶었다.<br />
해서 해당 센서의 <a href="https://github.com/limengdu/MR24HPC1_ESPHome_external_components/blob/main/example/mr24hpc1.yaml">Github 자료</a>에 들어가 YAML 파일의 내용을 보강하였다. <br /></p>]]></content><author><name></name></author><category term="Server" /><category term="Server" /><category term="Proxmox" /><category term="HomeAssistant" /><category term="ESP32" /><summary type="html"><![CDATA[구입 계기 지난 2024년 4월 Home Assistant 서버에 물린 Zigbee 노드가 30개가 넘어감에 따라 기존에 쓰던 CC2531 Zigbee 동글을 지원 종료하고 Home Assistant가 공식 지원한다고 하는 Home Assistant Skyconnect(현재는 Home Assistant Connect ZBT-1이라는 이름으로 팔리나 보다.)로 새로 구성하였다.]]></summary></entry><entry><title type="html">이동형 서버 만둘기</title><link href="https://nveloper.github.io/server/2025/05/09/VE5050-Remote-HA.html" rel="alternate" type="text/html" title="이동형 서버 만둘기" /><published>2025-05-09T00:00:00+00:00</published><updated>2025-05-09T00:00:00+00:00</updated><id>https://nveloper.github.io/server/2025/05/09/VE5050-Remote%20HA</id><content type="html" xml:base="https://nveloper.github.io/server/2025/05/09/VE5050-Remote-HA.html"><![CDATA[<p>현재 구성한 서버는 고정된 Proxmox 가상화 서버 아래에<br />
OMV와 Home Assistant Supervised, 그리고 필요에 따라<br />
Ubuntu나 Windows VM을 돌릴 수 있게 구성되어 있다.<br /></p>

<p>서버는 Deskmini X300을 기반으로 구성되었고,<br />
CPU와 저장장치의 제원은 아래와 같다.<br />  <br />
CPU: 5600G<br />
RAM: SODIMM LPDDR4 32GB<br />
SSD: NVME SSD1 - KIOXIA 1TB<br />
     NVME SSD2 -<br /> 
     SATA1     -<br />
     SATA2     -<br /></p>

<p>나스로 활용하는 서버이기 때문에 SSD를 증설할 계획이 있었으나<br />
사용해보니 생각보다 용량을 잡아먹지 않았다.<br />
스위치 에뮬에 넣을 게임 파일도 각각은 꽤 크지만 수가 적어 차이가 별로 나지 않았고,<br />
여태 대학 다니며 만들어낸 여러 난잡한 과제물들도 용량이 작았다.<br />
그나마 유의미하게 활용하는 부분이 즐거운 영상들(…)과 iso, img 파일들을 백업해두는 정도?<br />
그래도 용량이 남아 앞으로 가족사진을 백업하는 기능을 추가할 생각이다.<br /></p>

<p>저 SATA 자리에 2.5인치 2테라 하드를 하나씩 박아서<br />
플래시 드라이브 나스와 하드 드라이브 나스를 1개의 본체로 묶는<br />
아주 깔쌈한 발상도 해봤는데, 아직은 시기상조라는 생각이 든다.<br /></p>

<p>맘같아선 랙을 사서 미크로틱 유선공유기에 AP를 달고<br />
맥 미니와 데스크탑 셸프에 요즘 핫하다는 nanoKVM을 달아<br />
냉장고마냥 집에 얌전히 모시는 깔쌈한 구성을 만들고 싶지만<br />
아직은 간난한 대학생 따리에 불과하기 때문에<br />
허울뿐인 꿈인 것이다.<br />
그리고 사실 뭔 용도가 있어서 이런 상상을 하는 건 아니다.<br />
하는 걸 보면 데미니도 털어서 N100 미니 PC로 긴축 구성해도 충분해 보인다.<br /></p>

<p>무튼 그게 중요한 것은 아니고,<br />
이런 걸 집에서 돌리는데도 불구하고 뭐 땀시 잔잔바리 쪼꼬미 서버를 또 도입하려고 하느냐
에 대한 설명이 더 중요하다.<br /></p>

<p>현재 격오지에 갇혀있는 신세임에도 불구하고 원격지 접속을 가능케 하는 서버에 의존하다 보니<br />
장거리 구간(여기서는 내 휴대용 라우터에서 집의 모뎀까지의 구간)에서의 연결에 문제가 생기면<br />
꼼짝없이 장애를 겪게 된다.<br /></p>

<p>딱히 회선이 끊겨있지는 않더라도 회선 연결을 위한 요금제의 조건으로 인해<br />
불량해진다든가(만일 1Mbps나 3Mbps 속도로 원격이나 관리페이지 접속을 해야 한다고 생각해 보자. 끔찍할 것이다.)<br />
근거는 없지만 이 격오지의 기지국에 연결된 기기들의 우선순위(?)가 있어 품질이 보장되지 않는 증상도 겪었다.<br />
회선의 신뢰성은 통신사가 책임지는 것이 맞긴 하나<br />
문득 이런 열악한 환경에서도 서버질을 하고 싶은 생각에<br />
이동형 서버를 구축하자는 생각을 하게 되었다.<br /></p>

<p>그렇다고 서버를 기존 서버처럼 만들어버리면<br />
아예 독립적인 서버가 되어 존재 이유가 애매해지기 때문에<br />
중앙집권적(?)인 구성을 해야 한다.<br />
집에 있는 서버가 메인 서버이고, 가지고 다닐 이동형 서버는<br />
이 메인 서버의 데이터 일부를 수용하거나, 로컬에서 저장한 내역을<br />
메인 서버로 정속 동기화를 할 수 있어야 하고,<br />
특히나 이 일은 Home Assistant의 원격지 노드를 구성하는 것이 주요한 내용인 만큼<br />
<a href="https://github.com/custom-components/remote_homeassistant">Remote Home Assistant</a>를 활용해 집에 있는 HA와 엮일 수 있어야 할 것이다.<br />
Remote Home Assistant가 등록된 기기에 한해서 로컬에서 명령을 수행하고 그 로그를 상위 HA에 보내는지,<br />
아니면 순전히 집에 구성된 HA 자체에 항상 연결되어 로컬의 장비를 Passthrough 하는 것에 그치는지<br />
정확히 알아낸 것은 아니지만, 구성해보면 깨달을 수 있을 것이다.<br />
아무튼 이동형 서버는 집에 있는 서버에 종속된 형태로 구성될 것이다.<br /></p>

<p>이동형 서버는 기본적으로 이동하면서 쓸 수 있어야 한다.<br />
그렇기 때문에 아래의 조건들을 충족해야 한다.<br /></p>

<ol>
  <li>셀룰러 망을 이용할 것.<br /></li>
  <li>일정 시간 동안 독립적인 작동을 보장하기 위해 배터리가 있을 것.<br /></li>
  <li>저전력일 것.<br /></li>
  <li>전원 공급을 USB C-Type으로 매개할 것.<br /></li>
</ol>

<p>그래서 나름 찾아본 제품이 
<a href="https://ko.aliexpress.com/item/1005006918474581.html?spm=a2g0o.productlist.main.4.262aqJk7qJk7Q0&amp;aem_p4p_detail=2025050902525919203651894526880001710764&amp;algo_pvid=78259f5a-b2d8-4e79-bdd5-26fb6bdcc9b9&amp;algo_exp_id=78259f5a-b2d8-4e79-bdd5-26fb6bdcc9b9-3&amp;pdp_ext_f=%7B%22order%22%3A%22336%22%2C%22eval%22%3A%221%22%7D&amp;pdp_npi=4%40dis%21KRW%21140763%21131108%21%21%21701.52%21653.40%21%402141115b17467843797987667e4907%2112000045324511657%21sea%21KR%214435266465%21X&amp;curPageLogUid=akcNlVGDwlXC&amp;utparam-url=scene%3Asearch%7Cquery_from%3A&amp;search_p4p_id=2025050902525919203651894526880001710764_1">Chatreey T9</a>
과 
<a href="https://ko.aliexpress.com/item/1005005954197501.html?spm=a2g0o.cart.0.0.774556bapAIZc3&amp;mp=1&amp;pdp_npi=5%40dis%21KRW%21KRW%20341633%21KRW%20167400%21%21KRW%20167400%21%21%21%4021010d9017467844701782771e1c7c%2112000038723123867%21ct%21KR%214435266465%21%211%210&amp;gatewayAdapt=glo2kor">SZBOX S1</a>이다.<br /></p>

<p>둘 다 저전력인 N100을 탑재한 미니 PC이며,<br />
전원공급이 C-Type USB로 매개된다.<br />
물론 미니 PC이기 때문에 PD 같은 걸 생각하고 충전기를 사면 안되고<br />
해당 미니 PC가 지원하는 전압을 뽑아줄 수 있는 충전기를 사야 한다.<br />
보통 65W 충전기에 꽂고 많이들 사용하는 것으로 보인다.<br /></p>

<p>뭐 아무튼 보조배터리는 일반적인 충전기보다 다양한 전압을 지원하기 때문에<br />
72Wh짜리 용량의 Anker 파워뱅크(A1336)를 UPS 마냥 사용할 생각을 했다.<br /></p>

<p>Chatreey T9 N100 Mini PC<br /></p>
<p>
 ![Chatreey T9](/assets/images/posts/2025-05-09-Remote HA/T9.jpg)<br />
</p>
<p>전자의 경우엔 위에서 봤을 때 약간 정방형인 PC로, 부피 측면에서는 후자보다 덜 깔쌈하나<br />
크나큰 메리트가 하나 있는데, 그것은 바로 DP Alt를 지원하는 C타입 포트가 1개 더 존재한다는 사실이다.<br />
즉, 뭔가 문제가 생긴다면 현재 휴대용 모니터 대용으로 쓰고 있는 <br />
Xreal Air 같은 장비에 물려서 바로 화면을 띄워 볼 수 있다는 것이다.<br />
다른 옵션이 있긴 하지만, 일단 위 링크의 제품은 램과 SSD가 모두 없는 제품이다.<br />
제품 값이 13만원 언저리인 만큼 더 싸니 그러려나 한다. 어차피 중국산 램과 SSD는 믿을 것이 못 되니까.<br /></p>
<p style="text-align: center;">
    해당 제품에 대한 자세한 리뷰<br />
</p>
<style>.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</style>
<div class="embed-container"><iframe src="https://www.youtube.com/embed/LAJ7S8Vm9RI?si=e5GAakGH-6kHpzPx" frameborder="0" allowfullscreen=""></iframe></div>
<p><br /></p>

<p>SZBOX S1 N100 Mini PC<br /></p>
<p>
 <img src="/assets/images/posts/2025-05-09-Remote HA/S1.jpg" />
</p>
<p>후자의 경우엔 iPhone 13 mini와 비슷한 크기의 아주 컴팩트한 PC이다.<br />
가로폭이 조금 좁고 세로가 길었던 걸로 기억하는데, 뭐 그렇다고 해도 휴대성으론 이걸 압도할 N100 PC가 없을 것이다.<br />
이 친구는 전원을 받는 C타입 포트 단 하나만 있어서, 직접 점검한다 친다면 모니터 전원과 HDMI 선을 주렁주렁 달아야 한다.<br />
그런 점검 없이 평상시에 돌린다면, 즉 정상적으로 작동하기만 한다면 아주 완벽한 제품이다.<br />
해당 제품은 램은 온보드에 박혀있고 SSD 선택만 할 수 있는데,<br />
기본이 12GB라 해도 CPU가 4코어 4스레드인지라 4개의 VM을 돌린다 쳐도 아주 충분할 거란 생각이 든다.<br />
대충 생각해보면 OMV에 1코어 2GB, HA에 1코어 2GB, 공인인증서 관련 업무용 윈도우 VM 2코어 8GB 정도 하면<br />
내 기준에선 이 서버에게서 기대할 수 있는 구성의 전부다.<br />
다만 치명적인 단점이 있는데 슬림한 만큼 열이 좀 더 나며, 이에 따른 팬 소음이 어느정도 수반된다는 것이다.<br /></p>
<p style="text-align: center;">
    해당 제품에 대한 자세한 리뷰<br />
</p>

<style>.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</style>
<div class="embed-container"><iframe src="https://www.youtube.com/embed/41jfgYdJ9fE?si=y5tH_pFsTONDI-08" frameborder="0" allowfullscreen=""></iframe></div>
<p><br /></p>]]></content><author><name>The Dogg</name></author><category term="Server" /><category term="발상" /><category term="삽질" /><category term="서버" /><category term="IoT" /><summary type="html"><![CDATA[현재 구성한 서버는 고정된 Proxmox 가상화 서버 아래에 OMV와 Home Assistant Supervised, 그리고 필요에 따라 Ubuntu나 Windows VM을 돌릴 수 있게 구성되어 있다.]]></summary></entry><entry><title type="html">서버 간 파일 주고 받기</title><link href="https://nveloper.github.io/server/2024/12/30/FE5040-Rsync.html" rel="alternate" type="text/html" title="서버 간 파일 주고 받기" /><published>2024-12-30T00:00:00+00:00</published><updated>2024-12-30T00:00:00+00:00</updated><id>https://nveloper.github.io/server/2024/12/30/FE5040-Rsync</id><content type="html" xml:base="https://nveloper.github.io/server/2024/12/30/FE5040-Rsync.html"><![CDATA[<h1 id="발단">발단<br /></h1>

<h1 id="발상">발상<br /></h1>

<h1 id="구현하기">구현하기<br /></h1>

<h1 id="응용하기">응용하기<br /></h1>]]></content><author><name></name></author><category term="Server" /><category term="NAS" /><category term="Server" /><category term="OMV" /><summary type="html"><![CDATA[발단]]></summary></entry><entry><title type="html">이동형 서버 만들기</title><link href="https://nveloper.github.io/server,/nas,/omv/2023/07/10/RE5011-Initial-OMV.html" rel="alternate" type="text/html" title="이동형 서버 만들기" /><published>2023-07-10T00:00:00+00:00</published><updated>2023-07-10T00:00:00+00:00</updated><id>https://nveloper.github.io/server,/nas,/omv/2023/07/10/RE5011-Initial%20OMV</id><content type="html" xml:base="https://nveloper.github.io/server,/nas,/omv/2023/07/10/RE5011-Initial-OMV.html"><![CDATA[<p>현재 구성한 서버는 고정된 Proxmox 가상화 서버 아래에<br />
OMV와 Home Assistant Supervised, 그리고 필요에 따라<br />
Ubuntu나 Windows VM을 돌릴 수 있게 구성되어 있다.<br /></p>

<p>서버는 Deskmini X300을 기반으로 구성되었고,<br />
CPU와 저장장치의 제원은 아래와 같다.<br />  <br />
CPU: 5600G<br />
RAM: SODIMM LPDDR4 32GB<br />
SSD: NVME SSD1 - KIOXIA 1TB<br />
     NVME SSD2 -<br /> 
     SATA1     -<br />
     SATA2     -<br /></p>

<p>나스로 활용하는 서버이기 때문에 SSD를 증설할 계획이 있었으나<br />
사용해보니 생각보다 용량을 잡아먹지 않았다.<br />
스위치 에뮬에 넣을 게임 파일도 각각은 꽤 크지만 수가 적어 차이가 별로 나지 않았고,<br />
여태 대학 다니며 만들어낸 여러 난잡한 과제물들도 용량이 작았다.<br />
그나마 유의미하게 활용하는 부분이 즐거운 영상들(…)과 iso, img 파일들을 백업해두는 정도?<br />
그래도 용량이 남아 앞으로 가족사진을 백업하는 기능을 추가할 생각이다.<br /></p>

<p>저 SATA 자리에 2.5인치 2테라 하드를 하나씩 박아서<br />
플래시 드라이브 나스와 하드 드라이브 나스를 1개의 본체로 묶는<br />
아주 깔쌈한 발상도 해봤는데, 아직은 시기상조라는 생각이 든다.<br /></p>

<p>맘같아선 랙을 사서 미크로틱 유선공유기에 AP를 달고<br />
맥 미니와 데스크탑 셸프에 요즘 핫하다는 nanoKVM을 달아<br />
냉장고마냥 집에 얌전히 모시는 깔쌈한 구성을 만들고 싶지만<br />
아직은 간난한 대학생 따리에 불과하기 때문에<br />
허울뿐인 꿈인 것이다.<br />
그리고 사실 뭔 용도가 있어서 이런 상상을 하는 건 아니다.<br />
하는 걸 보면 데미니도 털어서 N100 미니 PC로 긴축 구성해도 충분해 보인다.<br /></p>

<p>무튼 그게 중요한 것은 아니고,<br />
이런 걸 집에서 돌리는데도 불구하고 뭐 땀시 잔잔바리 쪼꼬미 서버를 또 도입하려고 하느냐
에 대한 설명이 더 중요하다.<br /></p>

<p>현재 격오지에 갇혀있는 신세임에도 불구하고 원격지 접속을 가능케 하는 서버에 의존하다 보니<br />
장거리 구간(여기서는 내 휴대용 라우터에서 집의 모뎀까지의 구간)에서의 연결에 문제가 생기면<br />
꼼짝없이 장애를 겪게 된다.<br /></p>

<p>딱히 회선이 끊겨있지는 않더라도 회선 연결을 위한 요금제의 조건으로 인해<br />
불량해진다든가(만일 1Mbps나 3Mbps 속도로 원격이나 관리페이지 접속을 해야 한다고 생각해 보자. 끔찍할 것이다.)<br />
근거는 없지만 이 격오지의 기지국에 연결된 기기들의 우선순위(?)가 있어 품질이 보장되지 않는 증상도 겪었다.<br />
회선의 신뢰성은 통신사가 책임지는 것이 맞긴 하나<br />
문득 이런 열악한 환경에서도 서버질을 하고 싶은 생각에<br />
이동형 서버를 구축하자는 생각을 하게 되었다.<br /></p>

<p>그렇다고 서버를 기존 서버처럼 만들어버리면<br />
아예 독립적인 서버가 되어 존재 이유가 애매해지기 때문에<br />
중앙집권적(?)인 구성을 해야 한다.<br />
집에 있는 서버가 메인 서버이고, 가지고 다닐 이동형 서버는<br />
이 메인 서버의 데이터 일부를 수용하거나, 로컬에서 저장한 내역을<br />
메인 서버로 정속 동기화를 할 수 있어야 하고,<br />
특히나 이 일은 Home Assistant의 원격지 노드를 구성하는 것이 주요한 내용인 만큼<br />
<a href="https://github.com/custom-components/remote_homeassistant">Remote Home Assistant</a>를 활용해 집에 있는 HA와 엮일 수 있어야 할 것이다.<br />
Remote Home Assistant가 등록된 기기에 한해서 로컬에서 명령을 수행하고 그 로그를 상위 HA에 보내는지,<br />
아니면 순전히 집에 구성된 HA 자체에 항상 연결되어 로컬의 장비를 Passthrough 하는 것에 그치는지<br />
정확히 알아낸 것은 아니지만, 구성해보면 깨달을 수 있을 것이다.<br />
아무튼 이동형 서버는 집에 있는 서버에 종속된 형태로 구성될 것이다.<br /></p>

<p>이동형 서버는 기본적으로 이동하면서 쓸 수 있어야 한다.<br />
그렇기 때문에 아래의 조건들을 충족해야 한다.<br /></p>

<ol>
  <li>셀룰러 망을 이용할 것.<br /></li>
  <li>일정 시간 동안 독립적인 작동을 보장하기 위해 배터리가 있을 것.<br /></li>
  <li>저전력일 것.<br /></li>
  <li>전원 공급을 USB C-Type으로 매개할 것.<br /></li>
</ol>

<p>그래서 나름 찾아본 제품이 
<a href="https://ko.aliexpress.com/item/1005006918474581.html?spm=a2g0o.productlist.main.4.262aqJk7qJk7Q0&amp;aem_p4p_detail=2025050902525919203651894526880001710764&amp;algo_pvid=78259f5a-b2d8-4e79-bdd5-26fb6bdcc9b9&amp;algo_exp_id=78259f5a-b2d8-4e79-bdd5-26fb6bdcc9b9-3&amp;pdp_ext_f=%7B%22order%22%3A%22336%22%2C%22eval%22%3A%221%22%7D&amp;pdp_npi=4%40dis%21KRW%21140763%21131108%21%21%21701.52%21653.40%21%402141115b17467843797987667e4907%2112000045324511657%21sea%21KR%214435266465%21X&amp;curPageLogUid=akcNlVGDwlXC&amp;utparam-url=scene%3Asearch%7Cquery_from%3A&amp;search_p4p_id=2025050902525919203651894526880001710764_1">Chatreey T9</a>
과 
<a href="https://ko.aliexpress.com/item/1005005954197501.html?spm=a2g0o.cart.0.0.774556bapAIZc3&amp;mp=1&amp;pdp_npi=5%40dis%21KRW%21KRW%20341633%21KRW%20167400%21%21KRW%20167400%21%21%21%4021010d9017467844701782771e1c7c%2112000038723123867%21ct%21KR%214435266465%21%211%210&amp;gatewayAdapt=glo2kor">SZBOX S1</a>이다.<br /></p>

<p>둘 다 저전력인 N100을 탑재한 미니 PC이며,<br />
전원공급이 C-Type USB로 매개된다.<br />
물론 미니 PC이기 때문에 PD 같은 걸 생각하고 충전기를 사면 안되고<br />
해당 미니 PC가 지원하는 전압을 뽑아줄 수 있는 충전기를 사야 한다.<br />
보통 65W 충전기에 꽂고 많이들 사용하는 것으로 보인다.<br /></p>

<p>뭐 아무튼 보조배터리는 일반적인 충전기보다 다양한 전압을 지원하기 때문에<br />
72Wh짜리 용량의 Anker 파워뱅크(A1336)를 UPS 마냥 사용할 생각을 했다.<br /></p>

<p>Chatreey T9 N100 Mini PC<br /></p>
<p>
 <img src="/assets/images/posts/2025-05-09-Remote HA/T9.jpg" />
</p>
<p>전자의 경우엔 위에서 봤을 때 약간 정방형인 PC로, 부피 측면에서는 후자보다 덜 깔쌈하나<br />
크나큰 메리트가 하나 있는데, 그것은 바로 DP Alt를 지원하는 C타입 포트가 1개 더 존재한다는 사실이다.<br />
즉, 뭔가 문제가 생긴다면 현재 휴대용 모니터 대용으로 쓰고 있는 <br />
Xreal Air 같은 장비에 물려서 바로 화면을 띄워 볼 수 있다는 것이다.<br />
다른 옵션이 있긴 하지만, 일단 위 링크의 제품은 램과 SSD가 모두 없는 제품이다.<br />
제품 값이 13만원 언저리인 만큼 더 싸니 그러려나 한다. 어차피 중국산 램과 SSD는 믿을 것이 못 되니까.<br /></p>
<p style="text-align: center;">
    해당 제품에 대한 자세한 리뷰<br />
</p>
<style>.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</style>
<div class="embed-container"><iframe src="https://www.youtube.com/embed/LAJ7S8Vm9RI?si=e5GAakGH-6kHpzPx" frameborder="0" allowfullscreen=""></iframe></div>
<p><br /></p>

<p>SZBOX S1 N100 Mini PC<br /></p>
<p>
 <img src="/assets/images/posts/2025-05-09-Remote HA/S1.jpg" />
</p>
<p>후자의 경우엔 iPhone 13 mini와 비슷한 크기의 아주 컴팩트한 PC이다.<br />
가로폭이 조금 좁고 세로가 길었던 걸로 기억하는데, 뭐 그렇다고 해도 휴대성으론 이걸 압도할 N100 PC가 없을 것이다.<br />
이 친구는 전원을 받는 C타입 포트 단 하나만 있어서, 직접 점검한다 친다면 모니터 전원과 HDMI 선을 주렁주렁 달아야 한다.<br />
그런 점검 없이 평상시에 돌린다면, 즉 정상적으로 작동하기만 한다면 아주 완벽한 제품이다.<br />
해당 제품은 램은 온보드에 박혀있고 SSD 선택만 할 수 있는데,<br />
기본이 12GB라 해도 CPU가 4코어 4스레드인지라 4개의 VM을 돌린다 쳐도 아주 충분할 거란 생각이 든다.<br />
대충 생각해보면 OMV에 1코어 2GB, HA에 1코어 2GB, 공인인증서 관련 업무용 윈도우 VM 2코어 8GB 정도 하면<br />
내 기준에선 이 서버에게서 기대할 수 있는 구성의 전부다.<br />
다만 치명적인 단점이 있는데 슬림한 만큼 열이 좀 더 나며, 이에 따른 팬 소음이 어느정도 수반된다는 것이다.<br /></p>
<p style="text-align: center;">
    해당 제품에 대한 자세한 리뷰<br />
</p>

<style>.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</style>
<div class="embed-container"><iframe src="https://www.youtube.com/embed/41jfgYdJ9fE?si=y5tH_pFsTONDI-08" frameborder="0" allowfullscreen=""></iframe></div>
<p><br /></p>]]></content><author><name>Nveloper</name></author><category term="Server," /><category term="NAS," /><category term="OMV" /><category term="발상" /><category term="삽질" /><category term="서버" /><category term="IoT" /><summary type="html"><![CDATA[현재 구성한 서버는 고정된 Proxmox 가상화 서버 아래에 OMV와 Home Assistant Supervised, 그리고 필요에 따라 Ubuntu나 Windows VM을 돌릴 수 있게 구성되어 있다.]]></summary></entry><entry><title type="html">Auxy List</title><link href="https://nveloper.github.io/music/0001/01/18/VE8114-Auxies.html" rel="alternate" type="text/html" title="Auxy List" /><published>0001-01-18T00:00:00+00:00</published><updated>0001-01-18T00:00:00+00:00</updated><id>https://nveloper.github.io/music/0001/01/18/VE8114-Auxies</id><content type="html" xml:base="https://nveloper.github.io/music/0001/01/18/VE8114-Auxies.html"><![CDATA[<h2 id="2018">2018</h2>
<h3 id="물망초">물망초</h3>
<ol>
  <li>물망초</li>
  <li>달맞이꽃</li>
</ol>

<h2 id="2019">2019</h2>
<h3 id="문제가-생겼어">문제가 생겼어</h3>
<ol>
  <li>문제가 생겼어</li>
  <li>문제가 생겼어 2</li>
  <li>부정맥</li>
</ol>

<h2 id="2020">2020</h2>
<h3 id="대성-大成">대성 大成</h3>
<ol>
  <li>윈터스쿨</li>
  <li>안광지배철</li>
  <li>꿈꾸는 뿌리</li>
  <li>고약한 노릇</li>
  <li>거울</li>
  <li>기면증</li>
  <li>듣기평가</li>
  <li>장마</li>
  <li>붕붕드링크</li>
  <li>곡산역</li>
  <li>짝사랑</li>
  <li>탈 난 심봉사</li>
  <li>헛걸음</li>
  <li>빙글이 엔딩</li>
  <li>끝나지 않는 노래</li>
</ol>

<h2 id="2021">2021</h2>
<h3 id="꽃-구경">꽃 구경</h3>
<ol>
  <li>문제가 생겼어(2021)</li>
  <li><del>꽃 구경</del></li>
  <li>부정맥(2021)</li>
  <li>Falsify</li>
  <li>눈사람</li>
  <li>고약한 노릇(2021)</li>
  <li>이비자에 가고 싶어요</li>
</ol>

<h3 id="도하록-渡河錄">도하록 渡河錄</h3>
<ol>
  <li>동작대교</li>
  <li>반포대교</li>
  <li>한남대교</li>
  <li>동호대교</li>
</ol>

<h2 id="2022">2022</h2>
<h3 id="연화-連華">연화 連華</h3>
<ol>
  <li>暗室組曲</li>
  <li>本夷에 対한 自己省察的 接近</li>
  <li>내선순환</li>
  <li>전 잘 지내고 있어요 엄마</li>
  <li>벚꽃</li>
  <li><del>녹취록</del></li>
  <li>개방성 이관증</li>
  <li>물거품</li>
  <li>칵테일</li>
  <li><del>탈력발작</del></li>
  <li><del>유전</del></li>
  <li><del>Flannelbased</del></li>
  <li>Isomorphic</li>
  <li>약속해</li>
</ol>

<h3 id="2019-rewind">2019 Rewind</h3>
<ol>
  <li>크리스탈 강섬유 만들기</li>
  <li>July 25, 2019</li>
  <li>Dumbfounded</li>
</ol>

<h2 id="2023">2023</h2>
<h3 id="경의선-이북의-긴-밤">경의선 이북의 긴 밤</h3>
<ol>
  <li>京義線 以北之 長夜(旧)</li>
  <li>곡산역(2023)</li>
  <li>帰れ</li>
  <li>輕步</li>
  <li>朝蘇人民親善万歳</li>
  <li>적색편이</li>
  <li>京義線 以北之 長夜</li>
</ol>

<h3 id="2023-rewind">2023 Rewind</h3>
<ol>
  <li>Ross Couch - Break Up</li>
  <li>Mord Fustang - You’re My World</li>
  <li>Disclosure - Omen</li>
  <li>Disclosure - What’s In Your Head</li>
  <li>Sankehips - Sumthin Crazy</li>
</ol>

<h2 id="2024">2024</h2>
<h3 id="저-언덕-너머에">저 언덕 너머에</h3>
<ol>
  <li>복선</li>
  <li>대가리가 꽃밭</li>
  <li><del>기시감</del></li>
  <li><del>새벽녘의 한강</del></li>
  <li>종점의 기적</li>
  <li>착각</li>
  <li><del>합정</del></li>
  <li><del>합정(var)</del></li>
  <li>물망초(2024)</li>
  <li>첫 눈</li>
  <li>첫 눈(Var)</li>
  <li><del>오리온자리</del></li>
</ol>

<h3 id="피카레스크">피카레스크</h3>
<ol>
  <li>받들어 총</li>
  <li><del>당신의 인생은 쉽나요?</del></li>
</ol>

<h3 id="2024-rewind">2024 Rewind</h3>
<ol>
  <li>tommy, piri - Say It</li>
  <li>tommy, piri - Can We</li>
</ol>

<h2 id="2025">2025</h2>
<h3 id="한하-嫻霞">한하 嫻霞</h3>
<ol>
  <li>暗室組曲</li>
  <li>물망초</li>
  <li>달맞이꽃</li>
  <li>한남대교</li>
  <li>Dumbfounded</li>
  <li>Isomorpic</li>
  <li>적색편이</li>
  <li>물망초(2024)</li>
</ol>

<h3 id="klassikaline">Klassikaline</h3>
<ol>
  <li><del>Ladies and Gentlemen</del></li>
  <li><del>Brainrot</del></li>
  <li><del>Clockworkd</del></li>
</ol>

<h3 id="연선-連線">연선 連線</h3>
<ol>
  <li><del>안녕히 가십시오</del></li>
  <li><del>ID</del></li>
  <li><del>북두칠성</del></li>
  <li><del>문제가 생겼어 “25</del></li>
</ol>

<p>Last Update : Jun 8 2025</p>]]></content><author><name></name></author><category term="Music" /><category term="Music" /><category term="Auxy" /><summary type="html"><![CDATA[2018 물망초 물망초 달맞이꽃]]></summary></entry><entry><title type="html">Vi1024 Events</title><link href="https://nveloper.github.io/server/0001/01/15/VI1024-Events.html" rel="alternate" type="text/html" title="Vi1024 Events" /><published>0001-01-15T00:00:00+00:00</published><updated>0001-01-15T00:00:00+00:00</updated><id>https://nveloper.github.io/server/0001/01/15/VI1024-Events</id><content type="html" xml:base="https://nveloper.github.io/server/0001/01/15/VI1024-Events.html"><![CDATA[]]></content><author><name></name></author><category term="Server" /><category term="Server" /><category term="Proxmox" /><category term="HomeAssistant" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">서버 간 파일 주고 받기</title><link href="https://nveloper.github.io/server/0001/01/10/VE1114-UPDATE.html" rel="alternate" type="text/html" title="서버 간 파일 주고 받기" /><published>0001-01-10T00:00:00+00:00</published><updated>0001-01-10T00:00:00+00:00</updated><id>https://nveloper.github.io/server/0001/01/10/VE1114-UPDATE</id><content type="html" xml:base="https://nveloper.github.io/server/0001/01/10/VE1114-UPDATE.html"><![CDATA[<h1 id="발단">발단<br /></h1>

<h1 id="발상">발상<br /></h1>

<h1 id="구현하기">구현하기<br /></h1>

<h1 id="응용하기">응용하기<br /></h1>]]></content><author><name></name></author><category term="Server" /><category term="NAS" /><category term="Server" /><category term="OMV" /><summary type="html"><![CDATA[발단]]></summary></entry><entry><title type="html">Development Timeline</title><link href="https://nveloper.github.io/history/0001/01/10/VI1014-UPDATE.html" rel="alternate" type="text/html" title="Development Timeline" /><published>0001-01-10T00:00:00+00:00</published><updated>0001-01-10T00:00:00+00:00</updated><id>https://nveloper.github.io/history/0001/01/10/VI1014-UPDATE</id><content type="html" xml:base="https://nveloper.github.io/history/0001/01/10/VI1014-UPDATE.html"><![CDATA[<h2 id="2015">2015</h2>
<h2 id="2016">2016</h2>
<h2 id="2017">2017</h2>
<h2 id="2018">2018</h2>
<h2 id="2019">2019</h2>
<h2 id="2020">2020</h2>
<h2 id="2021">2021</h2>
<h3 id="jun-13">Jun 13</h3>
<p>RDP on CDN 구성<br /></p>
<h3 id="nov-19">Nov 19</h3>
<p>Windows 11 도입<br /></p>
<h3 id="dec-14">Dec 14</h3>
<p>-<br /></p>
<h3 id="dec-18">Dec 18</h3>
<p>Windows on ARM 설치 on Lumia 950<br /></p>

<h2 id="2022">2022</h2>
<h3 id="apr-10">Apr 10</h3>
<p>Mainliner 데스크탑 구성<br /></p>
<h3 id="jun-14">Jun 14</h3>
<p>Home Assistant Server 개설<br /></p>
<h3 id="aug-10">Aug 10</h3>
<p>회선 분기 프로젝트 1 (1번 망, 2번 망)<br /></p>
<h3 id="nov-16">Nov 16</h3>
<p>CUPS 구성 on Ubuntu Laptop<br /></p>
<h3 id="dec-3">Dec 3</h3>
<p>CUPS Docker 구성 on Debian Laptop<br /></p>
<h3 id="dec-24">Dec 24</h3>
<p>CUPS Server 철수<br /></p>

<h2 id="2023">2023</h2>
<h3 id="jan-25">Jan 25</h3>
<p>RDP 멀티모니터<br /></p>
<h3 id="apr-13">Apr 13</h3>
<p>-<br /></p>
<h3 id="jun-20">Jun 20</h3>
<p>Moonlight 도입<br /></p>
<h3 id="jul-15">Jul 15</h3>
<p>BuildDesk 데스크탑 구성,<br />
회선 분기 프로젝트 2 (2번 망 &gt; 부회선)<br /></p>
<h3 id="jul-30">Jul 30</h3>
<p>부회선 OMV 도입<br /></p>
<h3 id="aug-4">Aug 4</h3>
<p>회선 분기 프로젝트 3 (부회선에서 가내기반망 분기)<br /></p>
<h3 id="aug-12">Aug 12</h3>
<p>SSH Putty 연결<br /></p>
<h3 id="nov-28">Nov 28</h3>
<p>MITM 중간자 공격으로 블루투스 자물쇠 구성<br /></p>
<h3 id="dec-15">Dec 15</h3>
<p>단방향 WebDAV Component 구성<br /></p>

<h2 id="2024">2024</h2>
<h3 id="jan-23">Jan 23</h3>
<p>양방향 WebDAV Component 구성<br /></p>
<h3 id="mar-8">Mar 8</h3>
<p>BackServer 가상서버 구성,<br />
PaleServer &gt; BackServer<br />
PaleServer 철수<br /></p>
<h3 id="apr-8">Apr 8</h3>
<p>Mainliner &gt; VaultDesk<br /></p>
<h3 id="apr-9">Apr 9</h3>
<p>VaultServer 신설<br /></p>
<h3 id="apr-15">Apr 15</h3>
<p>BackServer 교체<br /></p>
<h3 id="dec-28">Dec 28</h3>
<p>단방향 Rsync Component with SSH 구성<br /></p>

<h2 id="2025">2025</h2>
<h3 id="jan-3">Jan 3</h3>
<p>양방향 Rsync Component with SSH 구성<br /></p>
<h3 id="mar-4">Mar 4</h3>
<p>-<br /></p>
<h3 id="apr-12">Apr 12</h3>
<p>Mac 원격 구성 with PARSEC<br /></p>
<h3 id="apr-13-1">Apr 13</h3>
<p>본/부회선 연선 구성<br /></p>
<h3 id="may-9">May 9</h3>
<p>Github Pages 블로그 구성<br /></p>
<h3 id="jun-17">Jun 17</h3>
<p>서비스용 원격 앱 V1 (포크)<br /></p>
<h3 id="jun-18">Jun 18</h3>
<p>Mac 원격 구성 with Sunshine<br /></p>
<h3 id="jun-25">Jun 25</h3>
<p>인트라넷 블로그 호스팅 구성<br /></p>]]></content><author><name></name></author><category term="History" /><category term="Timeline" /><category term="Development" /><summary type="html"><![CDATA[2015 2016 2017 2018 2019 2020 2021 Jun 13 RDP on CDN 구성 Nov 19 Windows 11 도입 Dec 14 - Dec 18 Windows on ARM 설치 on Lumia 950]]></summary></entry></feed>